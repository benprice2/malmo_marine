// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  EMPLOYER
  EMPLOYEE
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  role      UserRole
  company   String?  // Only for employers
  cvUrl     String?  // Only for employees
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  jobs         Job[]         @relation("EmployerJobs") // Jobs posted by employer
  applications Application[]  @relation("EmployeeApplications") // Applications submitted by employee
}

model Job {
  id          String   @id @default(cuid())
  title       String
  description String
  location    String
  salary      String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  employer     User          @relation("EmployerJobs", fields: [employerId], references: [id], onDelete: Cascade)
  employerId   String
  applications Application[]  @relation("JobApplications")
}

model Application {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  job       Job    @relation("JobApplications", fields: [jobId], references: [id], onDelete: Cascade)
  jobId     String
  employee  User   @relation("EmployeeApplications", fields: [employeeId], references: [id], onDelete: Cascade)
  employeeId String

  @@unique([jobId, employeeId])
}
